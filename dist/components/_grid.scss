
@if variable-exists('grid-gutter') { $grid-gutter: $grid-gutter; }
@else if variable-exists('v-space') { $grid-gutter: $v-space; }
@else { $grid-gutter: 1.5rem; }


// Grid
//
// Simple grid layout without gutters. Allows single or multiple grid rows.
// Apply width to grid items using width utils, or extend the component with a
// modifier and style named grid spans.
//
// Markup:
// <div class="c-grid">
//     <div class="c-grid__span u-width-1of3">
//     <div class="c-grid__span u-width-1of3">
//     <div class="c-grid__span u-width-1of3">
// </div>
//
// <div class="c-grid c--custom">
//     <div class="c-grid__span c--col-a">
//     <div class="c-grid__span c--col-b">
//     <div class="c-grid__span c--col-c">
// </div>

.c-grid {
  box-sizing: border-box;

    &:before,
    &:after {
      content: ' ';
      display: table;
    }

    &:after {
      clear: both;
    }
}

.c-grid__span {
    box-sizing: border-box;
    display: block;
    float: left;
}


// Grid with horizontal and vertical gutters
//
// Markup:
// <div class="c-grid c--gutters">
//     <div class="c-grid__span u-width-1of3">
//     <div class="c-grid__span u-width-1of3">
//     <div class="c-grid__span u-width-1of3">
// </div>

.c-grid.c--gutters {
    margin-left: $grid-gutter * -0.5;
    margin-right: $grid-gutter * -0.5;

    // Prevent horizontal gutters from creating extra space above the top row by
    // pulling the grid up. Applying the negative margin using generated content
    // frees us to apply spacing utils to the grid without breaking it.

    &:before {
      margin-top: $grid-gutter * -1;
    }
}

.c-grid.c--gutters > .c-grid__span {
  padding: ($grid-gutter * 1) ($grid-gutter * 0.5) 0;
}
