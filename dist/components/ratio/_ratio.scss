
// Ratio
//
// Fluid-width element with an intrinsic width/height ratio. Create custom 
// ratios by defining additional modifiers.
//
// Markup:
// <div class="c-ratio c--16by9">
//     [<el class="c-ratio__item">|<iframe>|<object>|<embed>]
// </div>
//
// Attribution:
// https://github.com/suitcss/components-flex-embed


// Ratio container
//
// 1. The aspect-ratio hack is applied to a pseudo-element because it allows
//    the component to accept `min/max-height`.
// 2. The ratio is 1 × 1 by default.

.c-ratio {
    position: relative;
    display: block;
    overflow: hidden;

    &::before { // 1
        content: '';
        display: block;
        width: 100%;
        padding-bottom: 100%; // 2
    }
}


// Ratio item
//
// Should have a single child element. Works without the sub-component class
// when child is an iframe, object or embed to account for situations where it’s
// difficult to edit the ratio item’s attributes, e.g. when the element is
// dynamically generated.

.c-ratio__item,
.c-ratio > iframe,
.c-ratio > object,
.c-ratio > embed {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
}


// Modifier: 4 × 3 ratio

.c-ratio.c--4by3::before {
    padding-bottom: 75%;
}


// Modifier: 16 × 9 ratio

.c-ratio.c--16by9::before {
    padding-bottom: 56.25%;
}
